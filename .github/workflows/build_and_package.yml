name: Build and Package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  QT_VERSION: 6.4.*

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            alias: Linux
            env:
              - BUILD_TYPE: Release

          - os: macos-13
            alias: intel-mac
            env:
              - BUILD_TYPE: Release

          - os: macos-latest
            alias: apple-silicon
            env:
              - BUILD_TYPE: Release

          - os: windows-latest
            alias: win64
            env:
              - BUILD_TYPE: Release

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build-${{ matrix.alias }} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build-${{ matrix.alias }} --config ${{env.BUILD_TYPE}} --target package

      - name: Test
        working-directory: ${{github.workspace}}/build-${{ matrix.alias }}
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}} 

      - name: Upload Artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.alias }}
          path: |
            build-${{ matrix.alias }}/*.tar.gz

